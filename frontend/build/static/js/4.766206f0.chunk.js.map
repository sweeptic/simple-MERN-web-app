{"version":3,"sources":["shared/components/UIElements/Card.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","shared/util/validators.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","shared/components/Formelements/Input.js","shared/hooks/form-hook.js","shared/components/Formelements/ImageUpload.js","users/pages/Auth.js"],"names":["Card","props","className","style","children","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","VALIDATOR_REQUIRE","type","VALIDATOR_MINLENGTH","val","VALIDATOR_EMAIL","validate","value","validators","isValid","o","Symbol","iterator","Array","isArray","unsupportedIterableToArray","F","s","n","done","e","_e","f","TypeError","it","err","normalCompletion","didErr","step","next","_e2","validator","trim","test","_defineProperty","obj","configurable","writable","Input","initialState","initialValue","initialValid","isTouched","useReducer","state","action","inputState","dispatch","id","onInput","useEffect","changeHandler","event","touchHandler","element","placeholder","onBlur","onChange","rows","htmlFor","label","errorText","formReducer","formIsValid","inputId","inputs","useForm","initialInputs","initialFormValiditiy","formState","useCallback","inputData","formValidity","ImageUpload","filePickerRef","useRef","useState","file","setFile","previewUrl","setPreviewUrl","setIsValid","fileReader","FileReader","onload","result","readAsDataURL","ref","display","accept","pickedFile","fileIsValid","files","center","src","alt","onClick","current","click","Auth","auth","useContext","AuthContext","useHttpClient","isLoading","error","sendRequest","clearError","isLoginMode","setIsLoginMode","email","password","inputHandler","setFormData","authSubmitHandler","a","preventDefault","process","JSON","stringify","responseData","login","userId","token","formData","FormData","append","name","image","Fragment","onClear","asOverlay","onSubmit","disabled","inverse","undefined","prevMode"],"mappings":"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","file":"static/js/4.766206f0.chunk.js","sourcesContent":["import React from \"react\";\n\nimport \"./Card.css\";\n\nconst Card = (props) => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\r\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\r\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\r\nconst VALIDATOR_TYPE_MIN = 'MIN';\r\nconst VALIDATOR_TYPE_MAX = 'MAX';\r\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\r\nconst VALIDATOR_TYPE_FILE = 'FILE';\r\n\r\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\r\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\r\nexport const VALIDATOR_MINLENGTH = (val) => ({\r\n  type: VALIDATOR_TYPE_MINLENGTH,\r\n  val: val,\r\n});\r\nexport const VALIDATOR_MAXLENGTH = (val) => ({\r\n  type: VALIDATOR_TYPE_MAXLENGTH,\r\n  val: val,\r\n});\r\nexport const VALIDATOR_MIN = (val) => ({ type: VALIDATOR_TYPE_MIN, val: val });\r\nexport const VALIDATOR_MAX = (val) => ({ type: VALIDATOR_TYPE_MAX, val: val });\r\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\r\n\r\nexport const validate = (value, validators) => {\r\n  let isValid = true;\r\n  for (const validator of validators) {\r\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\r\n      isValid = isValid && value.trim().length > 0;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\r\n      isValid = isValid && value.trim().length >= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\r\n      isValid = isValid && value.trim().length <= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MIN) {\r\n      isValid = isValid && +value >= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MAX) {\r\n      isValid = isValid && +value <= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\r\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\r\n    }\r\n  }\r\n  return isValid;\r\n};\r\n","import unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o) {\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (o = unsupportedIterableToArray(o))) {\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var it,\n      normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import React, { useEffect, useReducer } from 'react';\r\nimport { validate } from '../../util/validators';\r\nimport './Input.css';\r\n\r\nconst Input = (props) => {\r\n  const inputReducer = (state, action) => {\r\n    switch (action.type) {\r\n      case 'CHANGE':\r\n        return {\r\n          ...state,\r\n          value: action.val,\r\n          isValid: validate(action.val, action.validators),\r\n        };\r\n      case 'TOUCH':\r\n        return {\r\n          ...state,\r\n          isTouched: true,\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n\r\n  const initialState = {\r\n    value: props.initialValue || '',\r\n    isValid: props.initialValid || false,\r\n    isTouched: false,\r\n  };\r\n\r\n  const [inputState, dispatch] = useReducer(inputReducer, initialState);\r\n\r\n  const { id, onInput } = props;\r\n  const { value, isValid } = inputState;\r\n\r\n  useEffect(() => {\r\n    onInput(id, value, isValid);\r\n  }, [id, value, isValid, onInput]);\r\n\r\n  const changeHandler = (event) => {\r\n    dispatch({\r\n      type: 'CHANGE',\r\n      val: event.target.value,\r\n      validators: props.validators,\r\n    });\r\n  };\r\n\r\n  const touchHandler = () => {\r\n    dispatch({\r\n      type: 'TOUCH',\r\n    });\r\n  };\r\n\r\n  const element =\r\n    props.element === 'input' ? (\r\n      <input\r\n        id={props.id}\r\n        type={props.type}\r\n        placeholder={props.placeholder}\r\n        onBlur={touchHandler}\r\n        onChange={changeHandler}\r\n        value={inputState.value}\r\n      />\r\n    ) : (\r\n      <textarea\r\n        id={props.id}\r\n        rows={props.rows || 3}\r\n        onBlur={touchHandler}\r\n        onChange={changeHandler}\r\n        value={inputState.value}\r\n      />\r\n    );\r\n\r\n  return (\r\n    <div\r\n      className={`form-control ${\r\n        !inputState.isValid && inputState.isTouched && 'form-control--invalid'\r\n      }`}\r\n    >\r\n      <label htmlFor={props.id}>{props.label}</label>\r\n      {element}\r\n      {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import { useCallback, useReducer } from 'react';\r\n\r\nconst formReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'INPUT_CHANGE':\r\n      let formIsValid = true;\r\n      for (const inputId in state.inputs) {\r\n        if (!state.inputs[inputId]) {\r\n          continue; //skip the undefined value\r\n        }\r\n        if (inputId === action.inputId) {\r\n          formIsValid = formIsValid && action.isValid;\r\n        } else {\r\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\r\n        }\r\n      }\r\n      return {\r\n        ...state,\r\n        inputs: {\r\n          ...state.inputs,\r\n          [action.inputId]: { value: action.value, isValid: action.isValid },\r\n        },\r\n        isValid: formIsValid,\r\n      };\r\n\r\n    case 'SET_DATA':\r\n      return {\r\n        inputs: action.inputs,\r\n        isValid: action.formIsValid,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const useForm = (initialInputs, initialFormValiditiy) => {\r\n  const [formState, dispatch] = useReducer(formReducer, {\r\n    inputs: initialInputs,\r\n    isValid: initialFormValiditiy,\r\n  });\r\n\r\n  const inputHandler = useCallback((id, value, isValid) => {\r\n    dispatch({\r\n      type: 'INPUT_CHANGE',\r\n      value: value,\r\n      isValid: isValid,\r\n      inputId: id,\r\n    });\r\n  }, []);\r\n\r\n  const setFormData = useCallback((inputData, formValidity) => {\r\n    dispatch({\r\n      type: 'SET_DATA',\r\n      inputs: inputData,\r\n      formIsValid: formValidity,\r\n    });\r\n  }, []);\r\n\r\n  return [formState, inputHandler, setFormData];\r\n};\r\n","import React, { useEffect, useRef } from 'react';\r\nimport './ImageUpload.css';\r\nimport Button from './Button';\r\nimport { useState } from 'react';\r\n\r\nconst ImageUpload = props => {\r\n  const filePickerRef = useRef();\r\n  const [file, setFile] = useState();\r\n  const [previewUrl, setPreviewUrl] = useState();\r\n  const [isValid, setIsValid] = useState(false);\r\n\r\n  const pickImageHandler = () => {\r\n    filePickerRef.current.click();\r\n  };\r\n\r\n  const pickedHandler = event => {\r\n    let pickedFile;\r\n    let fileIsValid = isValid;\r\n    if (event.target.files && event.target.files.length === 1) {\r\n      pickedFile = event.target.files[0];\r\n      setFile(pickedFile);\r\n      setIsValid(true);\r\n      fileIsValid = true;\r\n    } else {\r\n      setIsValid(false);\r\n      fileIsValid = false;\r\n    }\r\n    props.onInput(props.id, pickedFile, fileIsValid);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!file) {\r\n      return;\r\n    }\r\n    const fileReader = new FileReader();\r\n    fileReader.onload = () => {\r\n      setPreviewUrl(fileReader.result);\r\n    }; //callback\r\n    fileReader.readAsDataURL(file);\r\n  }, [file]);\r\n\r\n  return (\r\n    <div className='form-control'>\r\n      <input\r\n        type='file'\r\n        ref={filePickerRef}\r\n        style={{ display: 'none' }}\r\n        id={props.id}\r\n        accept='.jpg, .png, .jpeg'\r\n        onChange={pickedHandler}\r\n      />\r\n\r\n      <div className={`image-upload ${props.center && 'center'}`}>\r\n        <div className='image-upload__preview'>\r\n          {previewUrl && <img src={previewUrl} alt='Preview' />}\r\n          {!previewUrl && <p>Please pick an image.</p>}\r\n        </div>\r\n\r\n        <Button type='button' onClick={pickImageHandler}>\r\n          PICK IMAGE\r\n        </Button>\r\n      </div>\r\n      {!isValid && <p>{props.errorText}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageUpload;\r\n","import React, { useContext, useState } from 'react';\r\nimport Card from './../../shared/components/UIElements/Card';\r\nimport Input from './../../shared/components/Formelements/Input';\r\nimport Button from './../../shared/components/Formelements/Button';\r\nimport {\r\n  VALIDATOR_EMAIL,\r\n  VALIDATOR_MINLENGTH,\r\n} from '../../shared/util/validators';\r\nimport { VALIDATOR_REQUIRE } from './../../shared/util/validators';\r\nimport { useForm } from './../../shared/hooks/form-hook';\r\nimport { AuthContext } from './../../shared/context/auth-context';\r\nimport ErrorModal from './../../shared/components/UIElements/ErrorModal';\r\nimport LoadingSpinner from './../../shared/components/UIElements/LoadingSpinner';\r\nimport { useHttpClient } from './../../shared/hooks/http-hook';\r\nimport ImageUpload from './../../shared/components/Formelements/ImageUpload';\r\n\r\nimport './Auth.css';\r\n\r\nconst Auth = () => {\r\n  const auth = useContext(AuthContext);\r\n\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  const [isLoginMode, setIsLoginMode] = useState(true);\r\n\r\n  const [formState, inputHandler, setFormData] = useForm({\r\n    email: {\r\n      value: '',\r\n      isValid: false,\r\n    },\r\n    password: {\r\n      value: '',\r\n      isValid: false,\r\n    },\r\n  });\r\n\r\n  const authSubmitHandler = async event => {\r\n    event.preventDefault();\r\n\r\n    if (isLoginMode) {\r\n      //login here\r\n\r\n      try {\r\n        const responseData = await sendRequest(\r\n          `${process.env.REACT_APP_BACKEND_URL}/users/login`,\r\n          'POST',\r\n          JSON.stringify({\r\n            email: formState.inputs.email.value,\r\n            password: formState.inputs.password.value,\r\n          }),\r\n          {\r\n            'Content-Type': 'application/json',\r\n          }\r\n        );\r\n        auth.login(responseData.userId, responseData.token);\r\n        // console.log(responseData);\r\n      } catch (error) {}\r\n    } else {\r\n      try {\r\n        const formData = new FormData();\r\n        formData.append('email', formState.inputs.email.value);\r\n        formData.append('name', formState.inputs.name.value);\r\n        formData.append('password', formState.inputs.password.value);\r\n        formData.append('image', formState.inputs.image.value);\r\n\r\n        const responseData = await sendRequest(\r\n          `${process.env.REACT_APP_BACKEND_URL}/users/signup`,\r\n          'POST',\r\n          formData\r\n        );\r\n        auth.login(responseData.userId, responseData.token);\r\n      } catch (error) {}\r\n    }\r\n  };\r\n\r\n  const switchModeHandler = () => {\r\n    if (!isLoginMode) {\r\n      //login\r\n      setFormData(\r\n        {\r\n          ...formState.inputs,\r\n          name: undefined,\r\n          image: undefined,\r\n        },\r\n        formState.inputs.email.isValid && formState.inputs.password.isValid\r\n      );\r\n    } else {\r\n      //signin\r\n      setFormData(\r\n        {\r\n          ...formState.inputs,\r\n          name: {\r\n            value: '',\r\n            isValid: false,\r\n          },\r\n          image: {\r\n            value: null,\r\n            isValid: false,\r\n          },\r\n        },\r\n        false\r\n      );\r\n    }\r\n\r\n    setIsLoginMode(prevMode => !prevMode);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      <Card className='authentication'>\r\n        {isLoading && <LoadingSpinner asOverlay />}\r\n        <h2>Login Required</h2>\r\n        <hr />\r\n        <form onSubmit={authSubmitHandler}>\r\n          {!isLoginMode && (\r\n            <Input\r\n              id='name'\r\n              element='input'\r\n              type='text'\r\n              label='Your Name'\r\n              validators={[VALIDATOR_REQUIRE()]}\r\n              errorText='Please enter a name.'\r\n              onInput={inputHandler}\r\n            />\r\n          )}\r\n          {!isLoginMode && (\r\n            <ImageUpload\r\n              center\r\n              id='image'\r\n              onInput={inputHandler}\r\n              errorText='Please provide an image.'\r\n            />\r\n          )}\r\n          <Input\r\n            id='email'\r\n            element='input'\r\n            type='email'\r\n            label='E-mail'\r\n            validators={[VALIDATOR_EMAIL(), VALIDATOR_REQUIRE()]}\r\n            errorText='Please enter a valid email address.'\r\n            onInput={inputHandler}\r\n          />\r\n          <Input\r\n            id='password'\r\n            element='input'\r\n            type='password'\r\n            label='Password'\r\n            validators={[VALIDATOR_MINLENGTH(6)]}\r\n            errorText='Please enter a valid password, at least 6 characters.'\r\n            onInput={inputHandler}\r\n          />\r\n          <Button type='submit' disabled={!formState.isValid}>\r\n            {isLoginMode ? 'LOGIN' : 'SIGNUP'}\r\n          </Button>\r\n        </form>\r\n\r\n        <Button inverse onClick={switchModeHandler}>\r\n          SWITCH TO {isLoginMode ? 'SIGNUP' : 'LOGIN'}\r\n        </Button>\r\n      </Card>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Auth;\r\n"],"sourceRoot":""}