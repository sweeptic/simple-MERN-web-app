{"version":3,"sources":["shared/components/UIElements/Card.js","shared/components/UIElements/Avatar.js","users/components/UserItem.js","users/components/UsersList.js","users/pages/Users.js"],"names":["Card","props","className","style","children","Avatar","src","image","alt","width","height","UserItem","to","id","process","name","placeCount","UsersList","items","length","map","user","key","places","Users","console","log","useState","loadedUsers","setLoadedUsers","useHttpClient","isLoading","error","sendRequest","clearError","useEffect","a","responseData","users","fetchUsers","Fragment","ErrorModal","onClear","LoadingSpinner"],"mappings":"qGAAA,0BAYeA,IARF,SAACC,GACZ,OACE,yBAAKC,UAAS,eAAUD,EAAMC,WAAaC,MAAOF,EAAME,OACrDF,EAAMG,Y,uLCSEC,G,MAZA,SAAAJ,GACb,OACE,yBAAKC,UAAS,iBAAYD,EAAMC,WAAaC,MAAOF,EAAME,OACxD,yBACEG,IAAKL,EAAMM,MACXC,IAAKP,EAAMO,IACXL,MAAO,CAAEM,MAAOR,EAAMQ,MAAOC,OAAQT,EAAMQ,Y,QCoBpCE,G,MAvBE,SAAAV,GACf,OACE,wBAAIC,UAAU,aACZ,kBAACF,EAAA,EAAD,CAAME,UAAU,sBACd,kBAAC,IAAD,CAAMU,GAAE,WAAMX,EAAMY,GAAZ,YACN,yBAAKX,UAAU,oBACb,kBAAC,EAAD,CACEK,MAAK,UAAKO,wBAAL,YAAwCb,EAAMM,OACnDC,IAAKP,EAAMc,QAGf,yBAAKb,UAAU,mBACb,4BAAKD,EAAMc,MACX,4BACGd,EAAMe,WADT,IAC2C,IAArBf,EAAMe,WAAmB,QAAU,gBCUtDC,G,MA1BG,SAAAhB,GAChB,OAA2B,IAAvBA,EAAMiB,MAAMC,OAEZ,yBAAKjB,UAAU,UACb,kBAACF,EAAA,EAAD,KACE,iDAON,wBAAIE,UAAU,cACXD,EAAMiB,MAAME,KAAI,SAAAC,GAAI,OACnB,kBAAC,EAAD,CACEC,IAAKD,EAAKR,GACVA,GAAIQ,EAAKR,GACTN,MAAOc,EAAKd,MACZQ,KAAMM,EAAKN,KACXC,WAAYK,EAAKE,OAAOJ,e,wBCkBnBK,UApCD,WACZC,QAAQC,IAAI,gBADM,MAGoBC,qBAHpB,mBAGXC,EAHW,KAGEC,EAHF,OAIoCC,cAA9CC,EAJU,EAIVA,UAAWC,EAJD,EAICA,MAAOC,EAJR,EAIQA,YAAaC,EAJrB,EAIqBA,WAmBvC,OAdAC,qBAAU,YACQ,uCAAG,4BAAAC,EAAA,+EAEYH,EAAY,GAAD,OACjCnB,4BADiC,WAFvB,OAETuB,EAFS,OAMfR,EAAeQ,EAAaC,OANb,uGAAH,qDAUhBC,KACC,CAACN,IAGF,kBAAC,IAAMO,SAAP,KACE,kBAACC,EAAA,EAAD,CAAYT,MAAOA,EAAOU,QAASR,IAClCH,GACC,yBAAK7B,UAAU,UACb,kBAACyC,EAAA,EAAD,QAGFZ,GAAaH,GAAe,kBAAC,EAAD,CAAWV,MAAOU","file":"static/js/8.512b03f5.chunk.js","sourcesContent":["import React from \"react\";\n\nimport \"./Card.css\";\n\nconst Card = (props) => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import React from 'react';\n\nimport './Avatar.css';\n\nconst Avatar = props => {\n  return (\n    <div className={`avatar ${props.className}`} style={props.style}>\n      <img\n        src={props.image}\n        alt={props.alt}\n        style={{ width: props.width, height: props.width }}\n      />\n    </div>\n  );\n};\n\nexport default Avatar;\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Avatar from './../../shared/components/UIElements/Avatar';\r\nimport Card from './../../shared/components/UIElements/Card';\r\nimport './UserItem.css';\r\n\r\nconst UserItem = props => {\r\n  return (\r\n    <li className='user-item'>\r\n      <Card className='user-item__content'>\r\n        <Link to={`/${props.id}/places`}>\r\n          <div className='user-item__image'>\r\n            <Avatar\r\n              image={`${process.env.REACT_APP_ASSET_URL}/${props.image}`}\r\n              alt={props.name}\r\n            />\r\n          </div>\r\n          <div className='user-item__info'>\r\n            <h2>{props.name}</h2>\r\n            <h3>\r\n              {props.placeCount} {props.placeCount === 1 ? 'Place' : 'Places'}\r\n            </h3>\r\n          </div>\r\n        </Link>\r\n      </Card>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default UserItem;\r\n","import React from 'react';\r\nimport UserItem from './UserItem';\r\nimport './UsersList.css';\r\nimport Card from './../../shared/components/UIElements/Card';\r\n\r\nconst UsersList = props => {\r\n  if (props.items.length === 0) {\r\n    return (\r\n      <div className='center'>\r\n        <Card>\r\n          <h2>No users found.</h2>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <ul className='users-list'>\r\n      {props.items.map(user => (\r\n        <UserItem\r\n          key={user.id}\r\n          id={user.id}\r\n          image={user.image}\r\n          name={user.name}\r\n          placeCount={user.places.length}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default UsersList;\r\n","import React, { useEffect, useState } from 'react';\r\nimport UsersList from './../components/UsersList';\r\nimport ErrorModal from './../../shared/components/UIElements/ErrorModal';\r\nimport LoadingSpinner from './../../shared/components/UIElements/LoadingSpinner';\r\nimport { useHttpClient } from './../../shared/hooks/http-hook';\r\n\r\nconst Users = () => {\r\n  console.log('render users');\r\n\r\n  const [loadedUsers, setLoadedUsers] = useState();\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n\r\n  //useeffect + promise = not good idea\r\n\r\n  //IEF - immediatelly executed function\r\n  useEffect(() => {\r\n    const fetchUsers = async () => {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          `${process.env.REACT_APP_BACKEND_URL}/users`\r\n        );\r\n\r\n        setLoadedUsers(responseData.users);\r\n      } catch (error) {}\r\n    };\r\n\r\n    fetchUsers();\r\n  }, [sendRequest]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      {isLoading && (\r\n        <div className='center'>\r\n          <LoadingSpinner />\r\n        </div>\r\n      )}\r\n      {!isLoading && loadedUsers && <UsersList items={loadedUsers} />}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Users;\r\n"],"sourceRoot":""}