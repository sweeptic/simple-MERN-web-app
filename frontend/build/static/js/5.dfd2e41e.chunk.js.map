{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","shared/util/validators.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","shared/components/Formelements/Input.js","shared/hooks/form-hook.js","shared/components/Formelements/ImageUpload.js","places/pages/NewPlace.js"],"names":["ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","VALIDATOR_REQUIRE","type","VALIDATOR_MINLENGTH","val","VALIDATOR_EMAIL","validate","value","validators","isValid","o","Symbol","iterator","Array","isArray","unsupportedIterableToArray","F","s","n","done","e","_e","f","TypeError","it","err","normalCompletion","didErr","step","next","_e2","validator","trim","test","_defineProperty","obj","configurable","writable","Input","props","initialState","initialValue","initialValid","isTouched","useReducer","state","action","inputState","dispatch","id","onInput","useEffect","changeHandler","event","touchHandler","element","placeholder","onBlur","onChange","rows","className","htmlFor","label","errorText","formReducer","formIsValid","inputId","inputs","useForm","initialInputs","initialFormValiditiy","formState","useCallback","inputData","formValidity","ImageUpload","filePickerRef","useRef","useState","file","setFile","previewUrl","setPreviewUrl","setIsValid","fileReader","FileReader","onload","result","readAsDataURL","ref","style","display","accept","pickedFile","fileIsValid","files","center","src","alt","onClick","current","click","NewPlace","auth","useContext","AuthContext","useHttpClient","isLoading","error","sendRequest","clearError","title","description","address","image","inputHandler","history","useHistory","placeSubmitHandler","a","preventDefault","formData","FormData","append","process","Authorization","token","Fragment","onClear","onSubmit","asOverlay","disabled"],"mappings":"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","file":"static/js/5.dfd2e41e.chunk.js","sourcesContent":["import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\r\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\r\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\r\nconst VALIDATOR_TYPE_MIN = 'MIN';\r\nconst VALIDATOR_TYPE_MAX = 'MAX';\r\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\r\nconst VALIDATOR_TYPE_FILE = 'FILE';\r\n\r\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\r\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\r\nexport const VALIDATOR_MINLENGTH = (val) => ({\r\n  type: VALIDATOR_TYPE_MINLENGTH,\r\n  val: val,\r\n});\r\nexport const VALIDATOR_MAXLENGTH = (val) => ({\r\n  type: VALIDATOR_TYPE_MAXLENGTH,\r\n  val: val,\r\n});\r\nexport const VALIDATOR_MIN = (val) => ({ type: VALIDATOR_TYPE_MIN, val: val });\r\nexport const VALIDATOR_MAX = (val) => ({ type: VALIDATOR_TYPE_MAX, val: val });\r\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\r\n\r\nexport const validate = (value, validators) => {\r\n  let isValid = true;\r\n  for (const validator of validators) {\r\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\r\n      isValid = isValid && value.trim().length > 0;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\r\n      isValid = isValid && value.trim().length >= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\r\n      isValid = isValid && value.trim().length <= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MIN) {\r\n      isValid = isValid && +value >= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MAX) {\r\n      isValid = isValid && +value <= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\r\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\r\n    }\r\n  }\r\n  return isValid;\r\n};\r\n","import unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o) {\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (o = unsupportedIterableToArray(o))) {\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var it,\n      normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import React, { useEffect, useReducer } from 'react';\r\nimport { validate } from '../../util/validators';\r\nimport './Input.css';\r\n\r\nconst Input = (props) => {\r\n  const inputReducer = (state, action) => {\r\n    switch (action.type) {\r\n      case 'CHANGE':\r\n        return {\r\n          ...state,\r\n          value: action.val,\r\n          isValid: validate(action.val, action.validators),\r\n        };\r\n      case 'TOUCH':\r\n        return {\r\n          ...state,\r\n          isTouched: true,\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n\r\n  const initialState = {\r\n    value: props.initialValue || '',\r\n    isValid: props.initialValid || false,\r\n    isTouched: false,\r\n  };\r\n\r\n  const [inputState, dispatch] = useReducer(inputReducer, initialState);\r\n\r\n  const { id, onInput } = props;\r\n  const { value, isValid } = inputState;\r\n\r\n  useEffect(() => {\r\n    onInput(id, value, isValid);\r\n  }, [id, value, isValid, onInput]);\r\n\r\n  const changeHandler = (event) => {\r\n    dispatch({\r\n      type: 'CHANGE',\r\n      val: event.target.value,\r\n      validators: props.validators,\r\n    });\r\n  };\r\n\r\n  const touchHandler = () => {\r\n    dispatch({\r\n      type: 'TOUCH',\r\n    });\r\n  };\r\n\r\n  const element =\r\n    props.element === 'input' ? (\r\n      <input\r\n        id={props.id}\r\n        type={props.type}\r\n        placeholder={props.placeholder}\r\n        onBlur={touchHandler}\r\n        onChange={changeHandler}\r\n        value={inputState.value}\r\n      />\r\n    ) : (\r\n      <textarea\r\n        id={props.id}\r\n        rows={props.rows || 3}\r\n        onBlur={touchHandler}\r\n        onChange={changeHandler}\r\n        value={inputState.value}\r\n      />\r\n    );\r\n\r\n  return (\r\n    <div\r\n      className={`form-control ${\r\n        !inputState.isValid && inputState.isTouched && 'form-control--invalid'\r\n      }`}\r\n    >\r\n      <label htmlFor={props.id}>{props.label}</label>\r\n      {element}\r\n      {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import { useCallback, useReducer } from 'react';\r\n\r\nconst formReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'INPUT_CHANGE':\r\n      let formIsValid = true;\r\n      for (const inputId in state.inputs) {\r\n        if (!state.inputs[inputId]) {\r\n          continue; //skip the undefined value\r\n        }\r\n        if (inputId === action.inputId) {\r\n          formIsValid = formIsValid && action.isValid;\r\n        } else {\r\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\r\n        }\r\n      }\r\n      return {\r\n        ...state,\r\n        inputs: {\r\n          ...state.inputs,\r\n          [action.inputId]: { value: action.value, isValid: action.isValid },\r\n        },\r\n        isValid: formIsValid,\r\n      };\r\n\r\n    case 'SET_DATA':\r\n      return {\r\n        inputs: action.inputs,\r\n        isValid: action.formIsValid,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const useForm = (initialInputs, initialFormValiditiy) => {\r\n  const [formState, dispatch] = useReducer(formReducer, {\r\n    inputs: initialInputs,\r\n    isValid: initialFormValiditiy,\r\n  });\r\n\r\n  const inputHandler = useCallback((id, value, isValid) => {\r\n    dispatch({\r\n      type: 'INPUT_CHANGE',\r\n      value: value,\r\n      isValid: isValid,\r\n      inputId: id,\r\n    });\r\n  }, []);\r\n\r\n  const setFormData = useCallback((inputData, formValidity) => {\r\n    dispatch({\r\n      type: 'SET_DATA',\r\n      inputs: inputData,\r\n      formIsValid: formValidity,\r\n    });\r\n  }, []);\r\n\r\n  return [formState, inputHandler, setFormData];\r\n};\r\n","import React, { useEffect, useRef } from 'react';\r\nimport './ImageUpload.css';\r\nimport Button from './Button';\r\nimport { useState } from 'react';\r\n\r\nconst ImageUpload = props => {\r\n  const filePickerRef = useRef();\r\n  const [file, setFile] = useState();\r\n  const [previewUrl, setPreviewUrl] = useState();\r\n  const [isValid, setIsValid] = useState(false);\r\n\r\n  const pickImageHandler = () => {\r\n    filePickerRef.current.click();\r\n  };\r\n\r\n  const pickedHandler = event => {\r\n    let pickedFile;\r\n    let fileIsValid = isValid;\r\n    if (event.target.files && event.target.files.length === 1) {\r\n      pickedFile = event.target.files[0];\r\n      setFile(pickedFile);\r\n      setIsValid(true);\r\n      fileIsValid = true;\r\n    } else {\r\n      setIsValid(false);\r\n      fileIsValid = false;\r\n    }\r\n    props.onInput(props.id, pickedFile, fileIsValid);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!file) {\r\n      return;\r\n    }\r\n    const fileReader = new FileReader();\r\n    fileReader.onload = () => {\r\n      setPreviewUrl(fileReader.result);\r\n    }; //callback\r\n    fileReader.readAsDataURL(file);\r\n  }, [file]);\r\n\r\n  return (\r\n    <div className='form-control'>\r\n      <input\r\n        type='file'\r\n        ref={filePickerRef}\r\n        style={{ display: 'none' }}\r\n        id={props.id}\r\n        accept='.jpg, .png, .jpeg'\r\n        onChange={pickedHandler}\r\n      />\r\n\r\n      <div className={`image-upload ${props.center && 'center'}`}>\r\n        <div className='image-upload__preview'>\r\n          {previewUrl && <img src={previewUrl} alt='Preview' />}\r\n          {!previewUrl && <p>Please pick an image.</p>}\r\n        </div>\r\n\r\n        <Button type='button' onClick={pickImageHandler}>\r\n          PICK IMAGE\r\n        </Button>\r\n      </div>\r\n      {!isValid && <p>{props.errorText}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageUpload;\r\n","import React, { useContext } from 'react';\r\n\r\nimport Button from './../../shared/components/Formelements/Button';\r\nimport Input from './../../shared/components/Formelements/Input';\r\nimport {\r\n  VALIDATOR_MINLENGTH,\r\n  VALIDATOR_REQUIRE,\r\n} from './../../shared/util/validators';\r\nimport { useForm } from './../../shared/hooks/form-hook';\r\nimport { useHttpClient } from './../../shared/hooks/http-hook';\r\nimport { AuthContext } from './../../shared/context/auth-context';\r\nimport ErrorModal from './../../shared/components/UIElements/ErrorModal';\r\nimport LoadingSpinner from './../../shared/components/UIElements/LoadingSpinner';\r\nimport { useHistory } from 'react-router-dom';\r\nimport ImageUpload from '../../shared/components/Formelements/ImageUpload';\r\nimport './PlaceForm.css';\r\n\r\nconst NewPlace = () => {\r\n  const auth = useContext(AuthContext);\r\n\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  const [formState, inputHandler] = useForm(\r\n    {\r\n      title: {\r\n        value: '',\r\n        isValid: false,\r\n      },\r\n      description: {\r\n        value: '',\r\n        isValid: false,\r\n      },\r\n      address: {\r\n        value: '',\r\n        isValid: false,\r\n      },\r\n      image: {\r\n        value: null,\r\n        isValid: false,\r\n      },\r\n    },\r\n    false\r\n  );\r\n\r\n  const history = useHistory();\r\n\r\n  const placeSubmitHandler = async event => {\r\n    event.preventDefault();\r\n\r\n    try {\r\n      const formData = new FormData();\r\n\r\n      formData.append('title', formState.inputs.title.value);\r\n      formData.append('description', formState.inputs.description.value);\r\n      formData.append('address', formState.inputs.address.value);\r\n      // formData.append('creator', auth.userId);\r\n      formData.append('image', formState.inputs.image.value);\r\n\r\n      await sendRequest(\r\n        `${process.env.REACT_APP_BACKEND_URL}/places`,\r\n        'POST',\r\n        formData,\r\n        {\r\n          Authorization: 'Bearer ' + auth.token,\r\n        }\r\n      );\r\n      //REDIRECT the user to a different page\r\n      history.push('/');\r\n    } catch (error) {}\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      <form className='place-form' onSubmit={placeSubmitHandler}>\r\n        {isLoading && <LoadingSpinner asOverlay />}\r\n        <Input\r\n          id='title'\r\n          type='text'\r\n          label='Title'\r\n          element='input'\r\n          validators={[VALIDATOR_REQUIRE()]}\r\n          // onChange={}\r\n          errorText='Please enter a valid title.'\r\n          onInput={inputHandler}\r\n        />\r\n        <Input\r\n          id='description'\r\n          label='Description'\r\n          element='textarea'\r\n          validators={[VALIDATOR_REQUIRE(), VALIDATOR_MINLENGTH(5)]}\r\n          errorText='Please enter a valid description ( at least 5 characters).'\r\n          onInput={inputHandler}\r\n        />\r\n        <Input\r\n          id='address'\r\n          label='Address'\r\n          element='input'\r\n          validators={[VALIDATOR_REQUIRE()]}\r\n          errorText='Please enter a valid address.'\r\n          onInput={inputHandler}\r\n        />\r\n        <ImageUpload\r\n          id='image'\r\n          onInput={inputHandler}\r\n          errorText='Please provide an image.'\r\n        />\r\n        <Button type='submit' disabled={!formState.isValid}>\r\n          APP PLACE\r\n        </Button>\r\n      </form>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default NewPlace;\r\n"],"sourceRoot":""}