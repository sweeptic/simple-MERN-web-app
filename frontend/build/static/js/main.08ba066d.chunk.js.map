{"version":3,"sources":["shared/hooks/auth-hook.js","shared/components/UIElements/Avatar.js","shared/components/UIElements/Card.js","users/components/UserItem.js","users/components/UsersList.js","shared/components/UIElements/Backdrop.js","shared/components/UIElements/Modal.js","shared/components/Formelements/Button.js","shared/components/UIElements/ErrorModal.js","shared/components/UIElements/LoadingSpinner.js","shared/hooks/http-hook.js","users/pages/Users.js","shared/util/validators.js","shared/components/Formelements/Input.js","shared/hooks/form-hook.js","shared/context/auth-context.js","shared/components/Formelements/ImageUpload.js","places/pages/NewPlace.js","shared/components/UIElements/Map.js","places/components/PlaceItem.js","places/components/PlaceList.js","places/pages/UserPlaces.js","shared/components/Navigation/MainHeader.js","shared/components/Navigation/NavLinks.js","shared/components/Navigation/SideDrawer.js","shared/components/Navigation/MainNavigation.js","places/pages/UpdatePlace.js","users/pages/Auth.js","App.js","index.js"],"names":["logoutTimer","Avatar","props","className","style","src","image","alt","width","height","Card","children","UserItem","to","id","process","name","placeCount","UsersList","items","length","map","user","key","places","Backdrop","ReactDOM","createPortal","onClick","document","getElementById","ModalOverlay","content","headerClass","header","onSubmit","event","preventDefault","contentClass","footerClass","footer","Modal","Fragment","show","onCancel","CSSTransition","in","mountOnEnter","unmountOnExit","timeout","classNames","Button","href","size","inverse","danger","exact","type","disabled","ErrorModal","onClear","error","LoadingSpinner","asOverlay","useHttpClient","useState","isLoading","setIsLoading","setError","activeHttpRequests","useRef","sendRequest","useCallback","url","a","method","body","headers","httpAbortCtrl","AbortController","current","push","fetch","signal","response","json","responseData","filter","reqCtrl","ok","Error","message","useEffect","forEach","abortCtrl","abort","clearError","Users","console","log","loadedUsers","setLoadedUsers","users","fetchUsers","VALIDATOR_MINLENGTH","val","validate","value","validators","isValid","validator","trim","test","Input","initialState","initialValue","initialValid","isTouched","useReducer","state","action","inputState","dispatch","onInput","changeHandler","target","touchHandler","element","placeholder","onBlur","onChange","rows","htmlFor","label","errorText","formReducer","formIsValid","inputId","inputs","useForm","initialInputs","initialFormValiditiy","formState","inputData","formValidity","AuthContext","createContext","isLoggedIn","userId","token","login","logout","ImageUpload","filePickerRef","file","setFile","previewUrl","setPreviewUrl","setIsValid","fileReader","FileReader","onload","result","readAsDataURL","ref","display","accept","pickedFile","fileIsValid","files","center","click","NewPlace","auth","useContext","title","description","address","inputHandler","history","useHistory","placeSubmitHandler","formData","FormData","append","Authorization","Map","mapRef","zoom","window","ol","layers","layer","Tile","source","OSM","view","View","proj","fromLonLat","lng","lat","PlaceItem","showMap","setShowMap","showConfirmModal","setshowConfirmModal","closeMapHandler","cancelDeleteHandler","confirmDeleteHandler","onDelete","creatorId","coordinates","PlaceList","place","creator","location","onDeletePlace","UserPlaces","loadedPlaces","setLoadedPlaces","useParams","fetchPlaces","deletePlaceId","prevPlaces","MainHeader","NavLinks","SideDrawer","MainNavigation","drawerIsOpen","setDrawerIsOpen","closeDrawerHandler","UpdatePlace","loadedPlace","setLoadedPlace","placeId","setFormData","fetchPlace","placeUpdateSubmitHandler","JSON","stringify","Auth","isLoginMode","setIsLoginMode","email","password","authSubmitHandler","undefined","prevMode","App","routes","setToken","setUserId","tokenExpirationDate_","setTokenExpirationDate","uid","expirationDate","tokenExpirationDate","Date","getTime","localStorage","setItem","expiration","toISOString","removeItem","remainingTime","setTimeout","clearTimeout","storedData","parse","getItem","useAuth","path","component","Provider","render"],"mappings":"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","file":"static/js/main.08ba066d.chunk.js","sourcesContent":["import { useCallback, useEffect, useState } from 'react';\r\n\r\nlet logoutTimer;\r\n\r\nexport const useAuth = () => {\r\n  const [token, setToken] = useState(false);\r\n  const [userId, setUserId] = useState(null);\r\n  const [tokenExpirationDate_, setTokenExpirationDate] = useState();\r\n\r\n  const login = useCallback((uid, token, expirationDate) => {\r\n    setToken(token);\r\n    setUserId(uid);\r\n\r\n    const tokenExpirationDate =\r\n      expirationDate || new Date(new Date().getTime() + 1000 * 60 * 60);\r\n    setTokenExpirationDate(tokenExpirationDate);\r\n    localStorage.setItem(\r\n      'userData',\r\n      JSON.stringify({\r\n        userId: uid,\r\n        token: token,\r\n        expiration: tokenExpirationDate.toISOString(),\r\n      })\r\n    );\r\n  }, []);\r\n\r\n  const logout = useCallback(() => {\r\n    setToken(null);\r\n    setUserId(null);\r\n    setTokenExpirationDate(null);\r\n    localStorage.removeItem('userData');\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (token && tokenExpirationDate_) {\r\n      const remainingTime =\r\n        tokenExpirationDate_.getTime() - new Date().getTime();\r\n      logoutTimer = setTimeout(logout, remainingTime); //return an I.D. of timer\r\n    } else {\r\n      clearTimeout(logoutTimer);\r\n    }\r\n  }, [token, logout, tokenExpirationDate_]);\r\n\r\n  useEffect(() => {\r\n    const storedData = JSON.parse(localStorage.getItem('userData'));\r\n    if (\r\n      storedData &&\r\n      storedData.token &&\r\n      new Date(storedData.expiration) > new Date() //token is valid\r\n    ) {\r\n      login(\r\n        storedData.userId,\r\n        storedData.token,\r\n        new Date(storedData.expiration)\r\n      );\r\n    }\r\n  }, [login]);\r\n\r\n  return { token, login, logout, userId };\r\n};\r\n","import React from 'react';\n\nimport './Avatar.css';\n\nconst Avatar = props => {\n  return (\n    <div className={`avatar ${props.className}`} style={props.style}>\n      <img\n        src={props.image}\n        alt={props.alt}\n        style={{ width: props.width, height: props.width }}\n      />\n    </div>\n  );\n};\n\nexport default Avatar;\n","import React from \"react\";\n\nimport \"./Card.css\";\n\nconst Card = (props) => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Avatar from './../../shared/components/UIElements/Avatar';\r\nimport Card from './../../shared/components/UIElements/Card';\r\nimport './UserItem.css';\r\n\r\nconst UserItem = props => {\r\n  return (\r\n    <li className='user-item'>\r\n      <Card className='user-item__content'>\r\n        <Link to={`/${props.id}/places`}>\r\n          <div className='user-item__image'>\r\n            <Avatar\r\n              image={`${process.env.REACT_APP_ASSET_URL}/${props.image}`}\r\n              alt={props.name}\r\n            />\r\n          </div>\r\n          <div className='user-item__info'>\r\n            <h2>{props.name}</h2>\r\n            <h3>\r\n              {props.placeCount} {props.placeCount === 1 ? 'Place' : 'Places'}\r\n            </h3>\r\n          </div>\r\n        </Link>\r\n      </Card>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default UserItem;\r\n","import React from 'react';\r\nimport UserItem from './UserItem';\r\nimport './UsersList.css';\r\nimport Card from './../../shared/components/UIElements/Card';\r\n\r\nconst UsersList = props => {\r\n  if (props.items.length === 0) {\r\n    return (\r\n      <div className='center'>\r\n        <Card>\r\n          <h2>No users found.</h2>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <ul className='users-list'>\r\n      {props.items.map(user => (\r\n        <UserItem\r\n          key={user.id}\r\n          id={user.id}\r\n          image={user.image}\r\n          name={user.name}\r\n          placeCount={user.places.length}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default UsersList;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./Backdrop.css\";\n\nconst Backdrop = (props) => {\n  return ReactDOM.createPortal(\n    <div className=\"backdrop\" onClick={props.onClick}></div>,\n    document.getElementById(\"backdrop-hook\")\n  );\n};\n\nexport default Backdrop;\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\n\r\nimport Backdrop from \"./Backdrop\";\r\nimport \"./Modal.css\";\r\n\r\nconst ModalOverlay = (props) => {\r\n  const content = (\r\n    <div className={`modal ${props.className}`} style={props.style}>\r\n      <header className={`modal__header ${props.headerClass}`}>\r\n        <h2>{props.header}</h2>\r\n      </header>\r\n      <form\r\n        onSubmit={\r\n          props.onSubmit ? props.onSubmit : (event) => event.preventDefault()\r\n        }\r\n      >\r\n        <div className={`modal__content ${props.contentClass}`}>\r\n          {props.children}\r\n        </div>\r\n        <footer className={`modal__footer ${props.footerClass}`}>\r\n          {props.footer}\r\n        </footer>\r\n      </form>\r\n    </div>\r\n  );\r\n  return ReactDOM.createPortal(content, document.getElementById(\"modal-hook\"));\r\n};\r\n\r\nconst Modal = (props) => {\r\n  return (\r\n    <React.Fragment>\r\n      {props.show && <Backdrop onClick={props.onCancel} />}\r\n      <CSSTransition\r\n        in={props.show}\r\n        mountOnEnter\r\n        unmountOnExit\r\n        timeout={200}\r\n        classNames=\"modal\"\r\n      >\r\n        <ModalOverlay {...props} />\r\n      </CSSTransition>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './Button.css';\n\nconst Button = props => {\n  if (props.href) {\n    return (\n      <a\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n        href={props.href}\n      >\n        {props.children}\n      </a>\n    );\n  }\n  if (props.to) {\n    return (\n      <Link\n        to={props.to}\n        exact={props.exact}\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n      >\n        {props.children}\n      </Link>\n    );\n  }\n  return (\n    <button\n      className={`button button--${props.size || 'default'} ${props.inverse &&\n        'button--inverse'} ${props.danger && 'button--danger'}`}\n      type={props.type}\n      onClick={props.onClick}\n      disabled={props.disabled}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React from 'react';\n\nimport Modal from './Modal';\nimport Button from './../Formelements/Button';\n\nconst ErrorModal = props => {\n  return (\n    <Modal\n      onCancel={props.onClear}\n      header='An Error Occurred!'\n      show={!!props.error}\n      footer={<Button onClick={props.onClear}>Okay</Button>}\n    >\n      <p>{props.error}</p>\n    </Modal>\n  );\n};\n\nexport default ErrorModal;\n","import React from 'react';\n\nimport './LoadingSpinner.css';\n\nconst LoadingSpinner = props => {\n  return (\n    <div className={`${props.asOverlay && 'loading-spinner__overlay'}`}>\n      <div className=\"lds-dual-ring\"></div>\n    </div>\n  );\n};\n\nexport default LoadingSpinner;\n","import { useCallback, useEffect, useRef, useState } from 'react';\r\n\r\nexport const useHttpClient = () => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState();\r\n\r\n  //azert nem hasznalunk usestate mert nem akarunk ui-t updateelni.\r\n  //behind in scene data.\r\n  const activeHttpRequests = useRef([]);\r\n\r\n  const sendRequest = useCallback(\r\n    async (url, method = 'GET', body = null, headers = {}) => {\r\n      setIsLoading(true);\r\n      const httpAbortCtrl = new AbortController();\r\n      activeHttpRequests.current.push(httpAbortCtrl);\r\n\r\n      try {\r\n        const response = await fetch(url, {\r\n          method,\r\n          body,\r\n          headers,\r\n          signal: httpAbortCtrl.signal,\r\n        });\r\n\r\n        const responseData = await response.json();\r\n\r\n        activeHttpRequests.current = activeHttpRequests.current.filter(\r\n          reqCtrl => reqCtrl !== httpAbortCtrl\r\n        );\r\n\r\n        if (!response.ok) {\r\n          throw new Error(responseData.message);\r\n        }\r\n\r\n        setIsLoading(false);\r\n        return responseData;\r\n      } catch (error) {\r\n        setError(error.message);\r\n        setIsLoading(false);\r\n        throw error;\r\n      }\r\n    },\r\n    []\r\n  );\r\n\r\n  const clearError = () => {\r\n    setError(null);\r\n  };\r\n\r\n  //only use cleanup function - component wich using this state - unmount - this case\r\n  useEffect(() => {\r\n    return () => {\r\n      activeHttpRequests.current.forEach(abortCtrl => abortCtrl.abort());\r\n    };\r\n  }, []);\r\n\r\n  return { isLoading, error, sendRequest, clearError };\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport UsersList from './../components/UsersList';\r\nimport ErrorModal from './../../shared/components/UIElements/ErrorModal';\r\nimport LoadingSpinner from './../../shared/components/UIElements/LoadingSpinner';\r\nimport { useHttpClient } from './../../shared/hooks/http-hook';\r\n\r\nconst Users = () => {\r\n  console.log('render users');\r\n\r\n  const [loadedUsers, setLoadedUsers] = useState();\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n\r\n  //useeffect + promise = not good idea\r\n\r\n  //IEF - immediatelly executed function\r\n  useEffect(() => {\r\n    const fetchUsers = async () => {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          `${process.env.REACT_APP_BACKEND_URL}/users`\r\n        );\r\n\r\n        setLoadedUsers(responseData.users);\r\n      } catch (error) {}\r\n    };\r\n\r\n    fetchUsers();\r\n  }, [sendRequest]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      {isLoading && (\r\n        <div className='center'>\r\n          <LoadingSpinner />\r\n        </div>\r\n      )}\r\n      {!isLoading && loadedUsers && <UsersList items={loadedUsers} />}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Users;\r\n","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\r\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\r\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\r\nconst VALIDATOR_TYPE_MIN = 'MIN';\r\nconst VALIDATOR_TYPE_MAX = 'MAX';\r\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\r\nconst VALIDATOR_TYPE_FILE = 'FILE';\r\n\r\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\r\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\r\nexport const VALIDATOR_MINLENGTH = (val) => ({\r\n  type: VALIDATOR_TYPE_MINLENGTH,\r\n  val: val,\r\n});\r\nexport const VALIDATOR_MAXLENGTH = (val) => ({\r\n  type: VALIDATOR_TYPE_MAXLENGTH,\r\n  val: val,\r\n});\r\nexport const VALIDATOR_MIN = (val) => ({ type: VALIDATOR_TYPE_MIN, val: val });\r\nexport const VALIDATOR_MAX = (val) => ({ type: VALIDATOR_TYPE_MAX, val: val });\r\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\r\n\r\nexport const validate = (value, validators) => {\r\n  let isValid = true;\r\n  for (const validator of validators) {\r\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\r\n      isValid = isValid && value.trim().length > 0;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\r\n      isValid = isValid && value.trim().length >= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\r\n      isValid = isValid && value.trim().length <= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MIN) {\r\n      isValid = isValid && +value >= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MAX) {\r\n      isValid = isValid && +value <= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\r\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\r\n    }\r\n  }\r\n  return isValid;\r\n};\r\n","import React, { useEffect, useReducer } from 'react';\r\nimport { validate } from '../../util/validators';\r\nimport './Input.css';\r\n\r\nconst Input = (props) => {\r\n  const inputReducer = (state, action) => {\r\n    switch (action.type) {\r\n      case 'CHANGE':\r\n        return {\r\n          ...state,\r\n          value: action.val,\r\n          isValid: validate(action.val, action.validators),\r\n        };\r\n      case 'TOUCH':\r\n        return {\r\n          ...state,\r\n          isTouched: true,\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n\r\n  const initialState = {\r\n    value: props.initialValue || '',\r\n    isValid: props.initialValid || false,\r\n    isTouched: false,\r\n  };\r\n\r\n  const [inputState, dispatch] = useReducer(inputReducer, initialState);\r\n\r\n  const { id, onInput } = props;\r\n  const { value, isValid } = inputState;\r\n\r\n  useEffect(() => {\r\n    onInput(id, value, isValid);\r\n  }, [id, value, isValid, onInput]);\r\n\r\n  const changeHandler = (event) => {\r\n    dispatch({\r\n      type: 'CHANGE',\r\n      val: event.target.value,\r\n      validators: props.validators,\r\n    });\r\n  };\r\n\r\n  const touchHandler = () => {\r\n    dispatch({\r\n      type: 'TOUCH',\r\n    });\r\n  };\r\n\r\n  const element =\r\n    props.element === 'input' ? (\r\n      <input\r\n        id={props.id}\r\n        type={props.type}\r\n        placeholder={props.placeholder}\r\n        onBlur={touchHandler}\r\n        onChange={changeHandler}\r\n        value={inputState.value}\r\n      />\r\n    ) : (\r\n      <textarea\r\n        id={props.id}\r\n        rows={props.rows || 3}\r\n        onBlur={touchHandler}\r\n        onChange={changeHandler}\r\n        value={inputState.value}\r\n      />\r\n    );\r\n\r\n  return (\r\n    <div\r\n      className={`form-control ${\r\n        !inputState.isValid && inputState.isTouched && 'form-control--invalid'\r\n      }`}\r\n    >\r\n      <label htmlFor={props.id}>{props.label}</label>\r\n      {element}\r\n      {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import { useCallback, useReducer } from 'react';\r\n\r\nconst formReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'INPUT_CHANGE':\r\n      let formIsValid = true;\r\n      for (const inputId in state.inputs) {\r\n        if (!state.inputs[inputId]) {\r\n          continue; //skip the undefined value\r\n        }\r\n        if (inputId === action.inputId) {\r\n          formIsValid = formIsValid && action.isValid;\r\n        } else {\r\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\r\n        }\r\n      }\r\n      return {\r\n        ...state,\r\n        inputs: {\r\n          ...state.inputs,\r\n          [action.inputId]: { value: action.value, isValid: action.isValid },\r\n        },\r\n        isValid: formIsValid,\r\n      };\r\n\r\n    case 'SET_DATA':\r\n      return {\r\n        inputs: action.inputs,\r\n        isValid: action.formIsValid,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const useForm = (initialInputs, initialFormValiditiy) => {\r\n  const [formState, dispatch] = useReducer(formReducer, {\r\n    inputs: initialInputs,\r\n    isValid: initialFormValiditiy,\r\n  });\r\n\r\n  const inputHandler = useCallback((id, value, isValid) => {\r\n    dispatch({\r\n      type: 'INPUT_CHANGE',\r\n      value: value,\r\n      isValid: isValid,\r\n      inputId: id,\r\n    });\r\n  }, []);\r\n\r\n  const setFormData = useCallback((inputData, formValidity) => {\r\n    dispatch({\r\n      type: 'SET_DATA',\r\n      inputs: inputData,\r\n      formIsValid: formValidity,\r\n    });\r\n  }, []);\r\n\r\n  return [formState, inputHandler, setFormData];\r\n};\r\n","import { createContext } from 'react';\r\n\r\nexport const AuthContext = createContext({\r\n  isLoggedIn: false,\r\n  userId: null,\r\n  token: null,\r\n  login: () => {},\r\n  logout: () => {},\r\n});\r\n","import React, { useEffect, useRef } from 'react';\r\nimport './ImageUpload.css';\r\nimport Button from './Button';\r\nimport { useState } from 'react';\r\n\r\nconst ImageUpload = props => {\r\n  const filePickerRef = useRef();\r\n  const [file, setFile] = useState();\r\n  const [previewUrl, setPreviewUrl] = useState();\r\n  const [isValid, setIsValid] = useState(false);\r\n\r\n  const pickImageHandler = () => {\r\n    filePickerRef.current.click();\r\n  };\r\n\r\n  const pickedHandler = event => {\r\n    let pickedFile;\r\n    let fileIsValid = isValid;\r\n    if (event.target.files && event.target.files.length === 1) {\r\n      pickedFile = event.target.files[0];\r\n      setFile(pickedFile);\r\n      setIsValid(true);\r\n      fileIsValid = true;\r\n    } else {\r\n      setIsValid(false);\r\n      fileIsValid = false;\r\n    }\r\n    props.onInput(props.id, pickedFile, fileIsValid);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!file) {\r\n      return;\r\n    }\r\n    const fileReader = new FileReader();\r\n    fileReader.onload = () => {\r\n      setPreviewUrl(fileReader.result);\r\n    }; //callback\r\n    fileReader.readAsDataURL(file);\r\n  }, [file]);\r\n\r\n  return (\r\n    <div className='form-control'>\r\n      <input\r\n        type='file'\r\n        ref={filePickerRef}\r\n        style={{ display: 'none' }}\r\n        id={props.id}\r\n        accept='.jpg, .png, .jpeg'\r\n        onChange={pickedHandler}\r\n      />\r\n\r\n      <div className={`image-upload ${props.center && 'center'}`}>\r\n        <div className='image-upload__preview'>\r\n          {previewUrl && <img src={previewUrl} alt='Preview' />}\r\n          {!previewUrl && <p>Please pick an image.</p>}\r\n        </div>\r\n\r\n        <Button type='button' onClick={pickImageHandler}>\r\n          PICK IMAGE\r\n        </Button>\r\n      </div>\r\n      {!isValid && <p>{props.errorText}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageUpload;\r\n","import React, { useContext } from 'react';\r\n\r\nimport Button from './../../shared/components/Formelements/Button';\r\nimport Input from './../../shared/components/Formelements/Input';\r\nimport {\r\n  VALIDATOR_MINLENGTH,\r\n  VALIDATOR_REQUIRE,\r\n} from './../../shared/util/validators';\r\nimport { useForm } from './../../shared/hooks/form-hook';\r\nimport { useHttpClient } from './../../shared/hooks/http-hook';\r\nimport { AuthContext } from './../../shared/context/auth-context';\r\nimport ErrorModal from './../../shared/components/UIElements/ErrorModal';\r\nimport LoadingSpinner from './../../shared/components/UIElements/LoadingSpinner';\r\nimport { useHistory } from 'react-router-dom';\r\nimport ImageUpload from '../../shared/components/Formelements/ImageUpload';\r\nimport './PlaceForm.css';\r\n\r\nconst NewPlace = () => {\r\n  const auth = useContext(AuthContext);\r\n\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  const [formState, inputHandler] = useForm(\r\n    {\r\n      title: {\r\n        value: '',\r\n        isValid: false,\r\n      },\r\n      description: {\r\n        value: '',\r\n        isValid: false,\r\n      },\r\n      address: {\r\n        value: '',\r\n        isValid: false,\r\n      },\r\n      image: {\r\n        value: null,\r\n        isValid: false,\r\n      },\r\n    },\r\n    false\r\n  );\r\n\r\n  const history = useHistory();\r\n\r\n  const placeSubmitHandler = async event => {\r\n    event.preventDefault();\r\n\r\n    try {\r\n      const formData = new FormData();\r\n\r\n      formData.append('title', formState.inputs.title.value);\r\n      formData.append('description', formState.inputs.description.value);\r\n      formData.append('address', formState.inputs.address.value);\r\n      // formData.append('creator', auth.userId);\r\n      formData.append('image', formState.inputs.image.value);\r\n\r\n      await sendRequest(\r\n        `${process.env.REACT_APP_BACKEND_URL}/places`,\r\n        'POST',\r\n        formData,\r\n        {\r\n          Authorization: 'Bearer ' + auth.token,\r\n        }\r\n      );\r\n      //REDIRECT the user to a different page\r\n      history.push('/');\r\n    } catch (error) {}\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      <form className='place-form' onSubmit={placeSubmitHandler}>\r\n        {isLoading && <LoadingSpinner asOverlay />}\r\n        <Input\r\n          id='title'\r\n          type='text'\r\n          label='Title'\r\n          element='input'\r\n          validators={[VALIDATOR_REQUIRE()]}\r\n          // onChange={}\r\n          errorText='Please enter a valid title.'\r\n          onInput={inputHandler}\r\n        />\r\n        <Input\r\n          id='description'\r\n          label='Description'\r\n          element='textarea'\r\n          validators={[VALIDATOR_REQUIRE(), VALIDATOR_MINLENGTH(5)]}\r\n          errorText='Please enter a valid description ( at least 5 characters).'\r\n          onInput={inputHandler}\r\n        />\r\n        <Input\r\n          id='address'\r\n          label='Address'\r\n          element='input'\r\n          validators={[VALIDATOR_REQUIRE()]}\r\n          errorText='Please enter a valid address.'\r\n          onInput={inputHandler}\r\n        />\r\n        <ImageUpload\r\n          id='image'\r\n          onInput={inputHandler}\r\n          errorText='Please provide an image.'\r\n        />\r\n        <Button type='submit' disabled={!formState.isValid}>\r\n          APP PLACE\r\n        </Button>\r\n      </form>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default NewPlace;\r\n","import React, { useRef, useEffect } from 'react';\r\n\r\nimport './Map.css';\r\n\r\nconst Map = (props) => {\r\n  const mapRef = useRef();\r\n\r\n  const { center, zoom } = props;\r\n\r\n  useEffect(() => {\r\n    new window.ol.Map({\r\n      target: mapRef.current.id,\r\n      layers: [\r\n        new window.ol.layer.Tile({\r\n          source: new window.ol.source.OSM(),\r\n        }),\r\n      ],\r\n      view: new window.ol.View({\r\n        center: window.ol.proj.fromLonLat([center.lng, center.lat]),\r\n        zoom: zoom,\r\n      }),\r\n    });\r\n  }, [center, zoom]);\r\n\r\n  return (\r\n    <div\r\n      ref={mapRef}\r\n      className={`map ${props.className}`}\r\n      style={props.style}\r\n      id=\"map\"\r\n    ></div>\r\n  );\r\n};\r\n\r\nexport default Map;\r\n","import React, { useContext, useState } from 'react';\r\n\r\nimport Card from '../../shared/components/UIElements/Card';\r\n// import Button from \"../../shared/components/FormElements/Button\";\r\nimport Button from './../../shared/components/Formelements/Button';\r\nimport './PlaceItem.css';\r\nimport Map from './../../shared/components/UIElements/Map';\r\nimport Modal from './../../shared/components/UIElements/Modal';\r\nimport { AuthContext } from './../../shared/context/auth-context';\r\nimport { useHttpClient } from './../../shared/hooks/http-hook';\r\nimport ErrorModal from './../../shared/components/UIElements/ErrorModal';\r\nimport LoadingSpinner from './../../shared/components/UIElements/LoadingSpinner';\r\n\r\nconst PlaceItem = props => {\r\n  const auth = useContext(AuthContext);\r\n  const [showMap, setShowMap] = useState(false);\r\n  const [showConfirmModal, setshowConfirmModal] = useState(false);\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n\r\n  const openMapHandler = () => setShowMap(true);\r\n\r\n  const closeMapHandler = () => setShowMap(false);\r\n\r\n  const showDeleteWarningHandler = () => {\r\n    setshowConfirmModal(true);\r\n  };\r\n\r\n  const cancelDeleteHandler = () => {\r\n    setshowConfirmModal(false);\r\n  };\r\n\r\n  const confirmDeleteHandler = async () => {\r\n    setshowConfirmModal(false);\r\n\r\n    try {\r\n      await sendRequest(\r\n        `${process.env.REACT_APP_BACKEND_URL}/places/${props.id}`,\r\n        'DELETE',\r\n        null,\r\n        {\r\n          Authorization: 'Bearer ' + auth.token,\r\n        }\r\n      );\r\n      props.onDelete(props.id);\r\n    } catch (error) {}\r\n  };\r\n\r\n  console.log(auth.userId + ', ' + props.creatorId);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      <Modal\r\n        show={showMap}\r\n        onCancel={closeMapHandler}\r\n        header={props.address}\r\n        contentClass='place-item__modal-content'\r\n        footerClass='place-item__modal-actions'\r\n        footer={<Button onClick={closeMapHandler}>CLOSE</Button>}\r\n      >\r\n        <div className='map-container'>\r\n          <Map center={props.coordinates} zoom={16} />\r\n        </div>\r\n      </Modal>\r\n\r\n      <Modal\r\n        show={showConfirmModal}\r\n        onCancel={cancelDeleteHandler}\r\n        header='Are you sure?'\r\n        footerClass='place-item__modal-actions'\r\n        footer={\r\n          <React.Fragment>\r\n            <Button inverse onClick={cancelDeleteHandler}>\r\n              CANCEL\r\n            </Button>\r\n            <Button danger onClick={confirmDeleteHandler}>\r\n              DELETE\r\n            </Button>\r\n          </React.Fragment>\r\n        }\r\n      >\r\n        <p>\r\n          Do you want to proceed and delete this place? Please note that it cant\r\n          be undone thereafter.\r\n        </p>\r\n      </Modal>\r\n\r\n      <li className='place-item'>\r\n        <Card className='place-item__content'>\r\n          {isLoading && <LoadingSpinner asOverlay />}\r\n          <div className='place-item__image'>\r\n            <img\r\n              src={`${process.env.REACT_APP_BACKEND_URL}/${props.image}`}\r\n              alt={props.title}\r\n            />\r\n          </div>\r\n          <div className='place-item__info'>\r\n            <h2>{props.title}</h2>\r\n            <h3>{props.address}</h3>\r\n            <p>{props.description}</p>\r\n          </div>\r\n          <div className='place-item__actions'>\r\n            <Button inverse onClick={openMapHandler}>\r\n              VIEW ON MAP\r\n            </Button>\r\n\r\n            {auth.userId === props.creatorId && (\r\n              <Button to={`/places/${props.id}`}>EDIT</Button>\r\n            )}\r\n\r\n            {auth.userId === props.creatorId && (\r\n              <Button danger onClick={showDeleteWarningHandler}>\r\n                DELETE\r\n              </Button>\r\n            )}\r\n          </div>\r\n        </Card>\r\n      </li>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default PlaceItem;\r\n","import React from 'react';\r\nimport './PlaceList.css';\r\nimport Card from './../../shared/components/UIElements/Card';\r\nimport PlaceItem from './PlaceItem';\r\nimport Button from './../../shared/components/Formelements/Button';\r\n\r\nconst PlaceList = props => {\r\n  if (props.items.length === 0) {\r\n    return (\r\n      <div className='place-list center'>\r\n        <Card>\r\n          <h2>No places found. Maybe create one?</h2>\r\n          <Button to='/places/new'>Share Place</Button>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <ul className='place-list'>\r\n      {props.items.map(place => (\r\n        <PlaceItem\r\n          key={place.id}\r\n          id={place.id}\r\n          image={place.image}\r\n          title={place.title}\r\n          description={place.description}\r\n          address={place.address}\r\n          creatorId={place.creator}\r\n          coordinates={place.location}\r\n          onDelete={props.onDeletePlace}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default PlaceList;\r\n","import React, { useEffect, useState } from 'react';\r\nimport PlaceList from './../components/PlaceList';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useHttpClient } from './../../shared/hooks/http-hook';\r\nimport ErrorModal from './../../shared/components/UIElements/ErrorModal';\r\nimport LoadingSpinner from './../../shared/components/UIElements/LoadingSpinner';\r\n//\r\n// const DUMMY_PLACES = [\r\n//   {\r\n//     id: 'p1',\r\n//     title: 'Empire State Building',\r\n//     description: 'One of the most famous sky scrapers in the world!',\r\n//     imageUrl:\r\n//       'https://upload.wikimedia.org/wikipedia/commons/thumb/d/df/NYC_Empire_State_Building.jpg/640px-NYC_Empire_State_Building.jpg',\r\n//     address: '20 W 34th St, New York, NY 10001',\r\n//     location: {\r\n//       lat: 40.7484405,\r\n//       lng: -73.9878584,\r\n//     },\r\n//     creator: 'u1',\r\n//   },\r\n//   {\r\n//     id: 'p2',\r\n//     title: 'Emp. State Building',\r\n//     description: 'One of the most famous sky scrapers in the world!',\r\n//     imageUrl:\r\n//       'https://upload.wikimedia.org/wikipedia/commons/thumb/d/df/NYC_Empire_State_Building.jpg/640px-NYC_Empire_State_Building.jpg',\r\n//     address: '20 W 34th St, New York, NY 10001',\r\n//     location: {\r\n//       lat: 40.7484405,\r\n//       lng: -73.9878584,\r\n//     },\r\n//     creator: 'u1',\r\n//   },\r\n// ];\r\n\r\nconst UserPlaces = () => {\r\n  const [loadedPlaces, setLoadedPlaces] = useState();\r\n\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n\r\n  const userId = useParams().userId;\r\n\r\n  useEffect(() => {\r\n    const fetchPlaces = async () => {\r\n      // sendRequest();\r\n      try {\r\n        const responseData = await sendRequest(\r\n          `${process.env.REACT_APP_BACKEND_URL}/places/user/${userId}`\r\n        );\r\n        setLoadedPlaces(responseData.places);\r\n      } catch (error) {}\r\n    };\r\n    fetchPlaces();\r\n  }, [sendRequest, userId]);\r\n\r\n  const placeDeleteHandler = deletePlaceId => {\r\n    setLoadedPlaces(prevPlaces =>\r\n      prevPlaces.filter(place => place.id !== deletePlaceId)\r\n    );\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      {isLoading && (\r\n        <div className='center'>\r\n          <LoadingSpinner />\r\n        </div>\r\n      )}\r\n      {!isLoading && loadedPlaces && (\r\n        <PlaceList items={loadedPlaces} onDeletePlace={placeDeleteHandler} />\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default UserPlaces;\r\n","import React from 'react';\n\nimport './MainHeader.css';\n\nconst MainHeader = props => {\n  return <header className=\"main-header\">{props.children}</header>;\n};\n\nexport default MainHeader;\n","import React, { useContext } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport './NavLinks.css';\nimport { AuthContext } from './../../context/auth-context';\n\nconst NavLinks = props => {\n  const auth = useContext(AuthContext);\n\n  return (\n    <ul className='nav-links'>\n      <li>\n        <NavLink to='/' exact>\n          ALL USERS\n        </NavLink>\n      </li>\n      {auth.isLoggedIn && (\n        <li>\n          <NavLink to={`/${auth.userId}/places`}>MY PLACES</NavLink>\n        </li>\n      )}\n      {auth.isLoggedIn && (\n        <li>\n          <NavLink to='/places/new'>ADD PLACE</NavLink>\n        </li>\n      )}\n      {!auth.isLoggedIn && (\n        <li>\n          <NavLink to='/auth'>AUTHENTICATE</NavLink>\n        </li>\n      )}\n      {auth.isLoggedIn && (\n        <li>\n          <button onClick={auth.logout}>LOGOUT</button>\n        </li>\n      )}\n    </ul>\n  );\n};\n\nexport default NavLinks;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./SideDrawer.css\";\nimport { CSSTransition } from \"react-transition-group\";\n\nconst SideDrawer = (props) => {\n  const content = (\n    <CSSTransition\n      in={props.show}\n      timeout={200}\n      classNames=\"slide-in-left\"\n      mountOnEnter\n      unmountOnExit\n    >\n      <aside onClick={props.onClick} className=\"side-drawer\">\n        {props.children}\n      </aside>\n    </CSSTransition>\n  );\n\n  return ReactDOM.createPortal(content, document.getElementById(\"drawer-hook\"));\n};\n\nexport default SideDrawer;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport MainHeader from \"./MainHeader\";\nimport NavLinks from \"./NavLinks\";\nimport SideDrawer from \"./SideDrawer\";\nimport \"./MainNavigation.css\";\nimport Backdrop from \"../UIElements/Backdrop\";\n\nconst MainNavigation = (props) => {\n  const [drawerIsOpen, setDrawerIsOpen] = useState(false);\n\n  const openDrawerHandler = () => setDrawerIsOpen(true);\n\n  const closeDrawerHandler = () => setDrawerIsOpen(false);\n\n  return (\n    <React.Fragment>\n      {drawerIsOpen && <Backdrop onClick={closeDrawerHandler} />}\n\n      <SideDrawer show={drawerIsOpen} onClick={closeDrawerHandler}>\n        <nav className=\"main-navigation__drawer-nav\">\n          <NavLinks />\n        </nav>\n      </SideDrawer>\n\n      <MainHeader>\n        <button\n          className=\"main-navigation__menu-btn\"\n          onClick={openDrawerHandler}\n        >\n          <span />\n          <span />\n          <span />\n        </button>\n        <h1 className=\"main-navigation__title\">\n          <Link to=\"/\">YourPlaces</Link>\n        </h1>\n        <nav className=\"main-navigation__header-nav\">\n          <NavLinks />\n        </nav>\n      </MainHeader>\n    </React.Fragment>\n  );\n};\n\nexport default MainNavigation;\n","import React, { useContext, useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\nimport Input from './../../shared/components/Formelements/Input';\r\nimport Button from './../../shared/components/Formelements/Button';\r\nimport {\r\n  VALIDATOR_REQUIRE,\r\n  VALIDATOR_MINLENGTH,\r\n} from './../../shared/util/validators';\r\nimport { useForm } from './../../shared/hooks/form-hook';\r\nimport Card from './../../shared/components/UIElements/Card';\r\nimport { useHttpClient } from './../../shared/hooks/http-hook';\r\nimport './PlaceForm.css';\r\nimport LoadingSpinner from './../../shared/components/UIElements/LoadingSpinner';\r\nimport ErrorModal from './../../shared/components/UIElements/ErrorModal';\r\nimport { AuthContext } from './../../shared/context/auth-context';\r\n\r\nconst UpdatePlace = () => {\r\n  const auth = useContext(AuthContext);\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  const [loadedPlace, setLoadedPlace] = useState();\r\n  const placeId = useParams().placeId;\r\n  const history = useHistory();\r\n\r\n  const [formState, inputHandler, setFormData] = useForm(\r\n    {\r\n      title: {\r\n        value: '',\r\n        isValid: false,\r\n      },\r\n      description: {\r\n        value: '',\r\n        isValid: false,\r\n      },\r\n    },\r\n    false\r\n  );\r\n\r\n  useEffect(() => {\r\n    const fetchPlace = async () => {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          `${process.env.REACT_APP_BACKEND_URL}/places/${placeId}`\r\n        );\r\n        setLoadedPlace(responseData.place);\r\n\r\n        setFormData(\r\n          {\r\n            title: {\r\n              value: responseData.title,\r\n              isValid: true,\r\n            },\r\n            description: {\r\n              value: responseData.description,\r\n              isValid: true,\r\n            },\r\n          },\r\n          true\r\n        );\r\n      } catch (error) {}\r\n    };\r\n    fetchPlace();\r\n  }, [sendRequest, placeId, setFormData]);\r\n\r\n  const placeUpdateSubmitHandler = async event => {\r\n    event.preventDefault();\r\n\r\n    try {\r\n      await sendRequest(\r\n        `${process.env.REACT_APP_BACKEND_URL}/places/${placeId}`,\r\n        'PATCH',\r\n        JSON.stringify({\r\n          title: formState.inputs.title.value,\r\n          description: formState.inputs.description.value,\r\n        }),\r\n        {\r\n          'Content-Type': 'application/json',\r\n          Authorization: 'Bearer ' + auth.token,\r\n        }\r\n      );\r\n      history.push('/' + auth.userId + '/places');\r\n    } catch (error) {}\r\n  };\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className='center'>\r\n        <LoadingSpinner />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!loadedPlace && !error) {\r\n    return (\r\n      <div className='center'>\r\n        <Card>\r\n          <h2>Could not find place!</h2>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    //deferred render\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      {!isLoading && loadedPlace && (\r\n        <form className='place-form' onSubmit={placeUpdateSubmitHandler}>\r\n          <Input\r\n            id='title'\r\n            element='input'\r\n            type='text'\r\n            label='Title'\r\n            validators={[VALIDATOR_REQUIRE()]}\r\n            errorText='Please enter a valid title.'\r\n            onInput={inputHandler}\r\n            initialValue={loadedPlace.title}\r\n            initialValid={true}\r\n          />\r\n          <Input\r\n            id='description'\r\n            element='textarea'\r\n            label='Description'\r\n            validators={[VALIDATOR_MINLENGTH(5)]}\r\n            errorText='Please enter a valid description (min. 5 characters).'\r\n            onInput={inputHandler}\r\n            initialValue={loadedPlace.description}\r\n            initialValid={true}\r\n          />\r\n          <Button type='submit' disabled={!formState.isValid}>\r\n            UPDATE PLACE\r\n          </Button>\r\n        </form>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default UpdatePlace;\r\n","import React, { useContext, useState } from 'react';\r\nimport Card from './../../shared/components/UIElements/Card';\r\nimport Input from './../../shared/components/Formelements/Input';\r\nimport Button from './../../shared/components/Formelements/Button';\r\nimport {\r\n  VALIDATOR_EMAIL,\r\n  VALIDATOR_MINLENGTH,\r\n} from '../../shared/util/validators';\r\nimport { VALIDATOR_REQUIRE } from './../../shared/util/validators';\r\nimport { useForm } from './../../shared/hooks/form-hook';\r\nimport { AuthContext } from './../../shared/context/auth-context';\r\nimport ErrorModal from './../../shared/components/UIElements/ErrorModal';\r\nimport LoadingSpinner from './../../shared/components/UIElements/LoadingSpinner';\r\nimport { useHttpClient } from './../../shared/hooks/http-hook';\r\nimport ImageUpload from './../../shared/components/Formelements/ImageUpload';\r\n\r\nimport './Auth.css';\r\n\r\nconst Auth = () => {\r\n  const auth = useContext(AuthContext);\r\n\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  const [isLoginMode, setIsLoginMode] = useState(true);\r\n\r\n  const [formState, inputHandler, setFormData] = useForm({\r\n    email: {\r\n      value: '',\r\n      isValid: false,\r\n    },\r\n    password: {\r\n      value: '',\r\n      isValid: false,\r\n    },\r\n  });\r\n\r\n  const authSubmitHandler = async event => {\r\n    event.preventDefault();\r\n\r\n    if (isLoginMode) {\r\n      //login here\r\n\r\n      try {\r\n        const responseData = await sendRequest(\r\n          `${process.env.REACT_APP_BACKEND_URL}/users/login`,\r\n          'POST',\r\n          JSON.stringify({\r\n            email: formState.inputs.email.value,\r\n            password: formState.inputs.password.value,\r\n          }),\r\n          {\r\n            'Content-Type': 'application/json',\r\n          }\r\n        );\r\n        auth.login(responseData.userId, responseData.token);\r\n        // console.log(responseData);\r\n      } catch (error) {}\r\n    } else {\r\n      try {\r\n        const formData = new FormData();\r\n        formData.append('email', formState.inputs.email.value);\r\n        formData.append('name', formState.inputs.name.value);\r\n        formData.append('password', formState.inputs.password.value);\r\n        formData.append('image', formState.inputs.image.value);\r\n\r\n        const responseData = await sendRequest(\r\n          `${process.env.REACT_APP_BACKEND_URL}/users/signup`,\r\n          'POST',\r\n          formData\r\n        );\r\n        auth.login(responseData.userId, responseData.token);\r\n      } catch (error) {}\r\n    }\r\n  };\r\n\r\n  const switchModeHandler = () => {\r\n    if (!isLoginMode) {\r\n      //login\r\n      setFormData(\r\n        {\r\n          ...formState.inputs,\r\n          name: undefined,\r\n          image: undefined,\r\n        },\r\n        formState.inputs.email.isValid && formState.inputs.password.isValid\r\n      );\r\n    } else {\r\n      //signin\r\n      setFormData(\r\n        {\r\n          ...formState.inputs,\r\n          name: {\r\n            value: '',\r\n            isValid: false,\r\n          },\r\n          image: {\r\n            value: null,\r\n            isValid: false,\r\n          },\r\n        },\r\n        false\r\n      );\r\n    }\r\n\r\n    setIsLoginMode(prevMode => !prevMode);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      <Card className='authentication'>\r\n        {isLoading && <LoadingSpinner asOverlay />}\r\n        <h2>Login Required</h2>\r\n        <hr />\r\n        <form onSubmit={authSubmitHandler}>\r\n          {!isLoginMode && (\r\n            <Input\r\n              id='name'\r\n              element='input'\r\n              type='text'\r\n              label='Your Name'\r\n              validators={[VALIDATOR_REQUIRE()]}\r\n              errorText='Please enter a name.'\r\n              onInput={inputHandler}\r\n            />\r\n          )}\r\n          {!isLoginMode && (\r\n            <ImageUpload\r\n              center\r\n              id='image'\r\n              onInput={inputHandler}\r\n              errorText='Please provide an image.'\r\n            />\r\n          )}\r\n          <Input\r\n            id='email'\r\n            element='input'\r\n            type='email'\r\n            label='E-mail'\r\n            validators={[VALIDATOR_EMAIL(), VALIDATOR_REQUIRE()]}\r\n            errorText='Please enter a valid email address.'\r\n            onInput={inputHandler}\r\n          />\r\n          <Input\r\n            id='password'\r\n            element='input'\r\n            type='password'\r\n            label='Password'\r\n            validators={[VALIDATOR_MINLENGTH(6)]}\r\n            errorText='Please enter a valid password, at least 6 characters.'\r\n            onInput={inputHandler}\r\n          />\r\n          <Button type='submit' disabled={!formState.isValid}>\r\n            {isLoginMode ? 'LOGIN' : 'SIGNUP'}\r\n          </Button>\r\n        </form>\r\n\r\n        <Button inverse onClick={switchModeHandler}>\r\n          SWITCH TO {isLoginMode ? 'SIGNUP' : 'LOGIN'}\r\n        </Button>\r\n      </Card>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Auth;\r\n","import React from 'react'; //default\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch,\n} from 'react-router-dom'; //named\nimport Users from './users/pages/Users';\nimport NewPlace from './places/pages/NewPlace';\nimport UserPlaces from './places/pages/UserPlaces';\nimport MainNavigation from './shared/components/Navigation/MainNavigation';\nimport UpdatePlace from './places/pages/UpdatePlace';\nimport Auth from './users/pages/Auth';\nimport { AuthContext } from './shared/context/auth-context';\nimport { useAuth } from './shared/hooks/auth-hook';\n\nconst App = () => {\n  const { token, login, logout, userId } = useAuth();\n\n  let routes;\n\n  if (token) {\n    routes = (\n      <Switch>\n        <Route path='/' exact component={Users} />\n        <Route path='/:userId/places' exact component={UserPlaces} />\n        <Route path='/places/new' exact component={NewPlace} />\n        <Route path='/places/:placeId' component={UpdatePlace} />\n        <Redirect to='/' />\n      </Switch>\n    );\n  } else {\n    routes = (\n      <Switch>\n        <Route path='/' exact component={Users} />\n        <Route path='/:userId/places' exact component={UserPlaces} />\n        <Route path='/auth' component={Auth} />\n        <Redirect to='/auth' />\n      </Switch>\n    );\n  }\n\n  return (\n    <AuthContext.Provider\n      value={{\n        userId: userId,\n        isLoggedIn: !!token,\n        token: token,\n        login: login,\n        logout: logout,\n      }}\n    >\n      <Router>\n        <MainNavigation />\n        <main>{routes}</main>\n      </Router>\n    </AuthContext.Provider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}